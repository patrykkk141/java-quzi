INSERT INTO `user`(user_id, `password`, role, username, email, registration_date, enabled)
VALUES (1, '{bcrypt}$2a$04$895j3QqSIaZU1dt62X4ntepX6E8XFiGfshM6ghGUG3WXVM/gaQkmO', 'ADMIN', 'patryk', 'patryk@example.com', '2019-04-09 18:04:59', true),
       (2, 'abc', 'USER', 'marcin', 'marcin@example.com', '2015-03-11 11:13:51', true);

INSERT INTO `question` (`question_id`, `img_url`, `text`, `code`, `creation_date`) VALUES
(1, 'http://localhost:8080/api/image/4e4bca90-e2da-4800-b826-5faceb146aa2.jpg', 'Która składnia dodawania obiektu panelu (JPanel panel = new JPanel();) do kontenera okna (JFrame frame = new JFrame();) w języku Java jest poprawna', 'public String saveImage(MultipartFile file) throws IOException, FileException {\r\n        if (file != null && !file.isEmpty()) {\r\n            String ext = getFileExtension(file.getOriginalFilename());\r\n            if (isImage(ext)) {\r\n                String name = UUID.randomUUID().toString().concat(ext);\r\n                File f = new File(folder + name);\r\n                f.createNewFile();\r\n                file.transferTo(f);\r\n                return API_IMAGE_URL + name;\r\n            }\r\n            throw new FileException(\"File is not an image!\");\r\n        }\r\n        throw new FileException(\"File is empty!\");\r\n    ', '2015-03-11 11:13:51'),
(2, 'http://localhost:8080/api/image/8211ece4-6d14-42f0-89c1-95d038771462.jpg', 'W języku Java rozkład komponentów (przycisków) w oknie aplikacji jak na rysunku niżej realizuje klasa (równa siatka przycisków 3x2 tej samej wielkości)', '  private String getFileExtension(String s) {\r\n        if (s.lastIndexOf(\".\") > 0)\r\n            return s.substring(s.lastIndexOf(\".\"));\r\n        else return null;\r\n    }', '2015-03-11 11:13:51'),
(3, NULL, 'Interfejsy funkcyjne:  ', null, '2015-03-11 11:13:51'),
(4, 'http://localhost:8080/api/image/cc027215-3021-441a-84df-21e4bff35dbb.jpg', 'Parser strumieniowy StAX pozwala na:', null, '2015-03-11 11:13:51'),
(5, NULL, 'Który kod jest poprawny:', null, '2015-03-11 11:13:51'),
(6, NULL, 'JavaFX: ', null, '2015-03-11 11:13:51'),
(7, NULL, 'FXML', null, '2015-03-11 11:13:51'),
(8, NULL, 'Klasa WebEngine i WebView języka JavaFX pozwala na budowę przeglądarki Web która przetwarza: ', null, '2015-03-11 11:13:51'),
(9, 'http://localhost:8080/api/image/c2c7d803-e02a-4537-8cdb-54d047b762af.jpg', 'Tworzenie obiektu Klasy komponentu JavaFX (...) ', ' @GetMapping(\"/api/quiz\")\r\n    public ResponseEntity<QuizDto> generateQuiz() throws BadRequestException, NotFoundException {\r\n        return generateQuizWithParams(quizProperties.getQuizLength(),\r\n                quizProperties.getQuizType(),\r\n                quizProperties.getAnswersQuantity(),\r\n                quizProperties.getQuizTimeInMillis());\r\n    ', '2015-03-11 11:13:51'),
(10, NULL, 'Prawidłowa definicja interfejsu Interfacename: ', null, '2015-03-11 11:13:51'),
(11, NULL, 'Która składnia umożliwia przeprowadzenie parsowania pliku języka XML za pomocą interfejsu SAX języka Java: ', null, '2015-03-11 11:13:51');
                                                                 ;

INSERT INTO `answer` (`answer_id`, `answer_type`, `text`, `question_id`) VALUES
  (1, 'POSITIVE', 'frame.add(panel);', 1),
  (2, 'NEGATIVE', 'panel.add(frame);', 1),
  (3, 'POSITIVE', 'frame.getContentPane().add(panel);', 1),
  (4, 'NEGATIVE', 'frame.remove(panel);', 1),
  (5, 'NEGATIVE', 'FlowLayout', 2),
  (6, 'POSITIVE', 'GridLayout', 2),
  (7, 'NEGATIVE', 'BorderLayout', 2),
  (8, 'NEGATIVE', 'BoxLayout', 2),
  (10, 'POSITIVE', 'java.util.function', 3),
  (11, 'NEGATIVE', 'java.lang.Comparaable<T> ', 3),
  (12, 'NEGATIVE', 'java.awt.ActionListener ', 3),
  (13, 'NEGATIVE', 'java.awt.MouseListener', 3),
  (14, 'POSITIVE', 'Odczyt i zapis dokumentów XML ', 4),
  (15, 'NEGATIVE', 'Tylko odczyt dokumentów XML ', 4),
  (16, 'NEGATIVE', 'Tylko zapis dokumentów XML ', 4),
  (17, 'NEGATIVE', 'Nie jest obsługiwany w języku JAVA', 4),
  (18, 'NEGATIVE', '@Interface public interface A{void method();} ', 5),
  (19, 'NEGATIVE', '@FunctionalInterface public interface A{} ', 5),
  (20, 'NEGATIVE', '@FunctionalInterface public interface A{void method1();void method2();} ', 5),
  (21, 'POSITIVE', '@FunctionalInterface public interface A{void method();} ', 5),
  (22, 'NEGATIVE', 'jest językiem skryptowym', 6),
  (23, 'POSITIVE', 'nie jest językiem skryptowym', 6),
  (24, 'POSITIVE', 'obsługuje wyrażenia lambda ', 6),
  (25, 'NEGATIVE', 'nie pamiętam, ale była to niepoprawna odpowiedź', 6),
  (26, 'NEGATIVE', 'jest kompilowalny ', 7),
  (27, 'POSITIVE', 'odpowiada za interfejs użytkownika dla javy fx ', 7),
  (28, 'NEGATIVE', 'nie pamiętam ', 7),
  (29, 'POSITIVE', 'jest językiem opisowym ', 7),
  (30, 'POSITIVE', 'HTML z CSS ', 8),
  (31, 'NEGATIVE', 'kod źródłowy języka Java', 8),
  (32, 'POSITIVE', 'kod języka JavaScript', 8),
  (33, 'POSITIVE', 'HTML DOM', 8),
  (34, 'POSITIVE', 'FileChooser ch = new FileChooser(); ', 9),
  (35, 'NEGATIVE', 'JFileChooser ch = new JFileChooser(); ', 9),
  (36, 'NEGATIVE', 'Chooser ch = new Chooser(); ', 9),
  (37, 'NEGATIVE', 'FXChooser ch = new FXChooser(); ', 9),
  (38, 'POSITIVE', 'public interface Interfacename extends Otherinterface ', 10),
  (39, 'POSITIVE', 'public interface Interfacename extends Otherinterface1, Otherinterface2 ', 10),
  (40, 'NEGATIVE', 'public interface Interfacename implements Otherinterface ', 10),
  (41, 'NEGATIVE', 'public interface Interfacename implements Otherinterface1, Otherinterface2 ', 10),
  (42, 'POSITIVE', 'parser.parse(source, handler); ', 11),
  (43, 'NEGATIVE', 'transformer.transform(source, result); ', 11),
  (44, 'NEGATIVE', 'validator.validate(source); ', 11),
  (45, 'NEGATIVE', 'parser.parse(source);', 11);
