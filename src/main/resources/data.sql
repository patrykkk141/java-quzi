INSERT INTO `user`(user_id, `password`, role, username, email, registration_date, enabled)
VALUES (1, '{bcrypt}$2a$04$895j3QqSIaZU1dt62X4ntepX6E8XFiGfshM6ghGUG3WXVM/gaQkmO', 'ADMIN', 'patryk', 'patryk@example.com', '2019-04-09 18:04:59', true),
       (2, 'abc', 'USER', 'marcin', 'marcin@example.com', '2015-03-11 11:13:51', true);

INSERT INTO `question` (question_id, code, creation_date, img_url, text) VALUES
(1, NULL, NULL, 'http://localhost:8080/image/1cf6ed6a-1c8c-482c-b0d4-d4a8ed732adb.jpg', ' What is the result?'),
(2, 'A and E are classes\r\nB and D are interfaces\r\nC is an abstract class', NULL, NULL, 'Which statements are true? (Choose three)'),
(3, NULL, NULL, NULL, 'What is the result?'),
(4, 'A and E are classes\r\nB and D are interfaces', NULL, NULL, 'Which statements are true? (Choose two)'),
(5, 'NOTE: The keyword \"instanceof\" is use to check whether an object is of a particular type.', NULL, 'http://localhost:8080/image/cdfe0a3a-cf28-4e85-9960-c5ff80294aac.jpg', 'What is the result?'),
(6, NULL, NULL, 'http://localhost:8080/image/b27b2b64-7966-45e7-b261-740dffa999fb.jpg', 'What is the result?'),
(7, NULL, NULL, 'http://localhost:8080/image/dbd7894d-d57f-4895-9e29-9bb875048c09.jpg', 'What is the output?'),
(8, NULL, NULL, NULL, ' Which of the following are legal identifiers?'),
(9, NULL, NULL, 'http://localhost:8080/image/02b74fe4-48ef-4561-b638-6dfc0e17c5a9.jpg', 'What is the result?'),
(10, NULL, NULL, 'http://localhost:8080/image/31fb31d0-f72d-406e-9d79-699631e67d11.jpg', 'What is the result?'),
(11, NULL, NULL, 'http://localhost:8080/image/c80a15d1-c851-4b00-8a43-c46b5b0626cc.jpg', 'What is the result?'),
(12, 'public class App {\r\n void calcBill() {\r\n // Line n1\r\n new Invoice().print();\r\n }\r\n}\r\n', NULL, NULL, 'Which code fragment can be inserted at Line n1 to enable the class compile?'),
(13, 'public interface MyInt {\r\n public void method1() {\r\n System.out.println(\"method1\");\r\n }\r\n public default void method2() {\r\n System.out.println(\"method2\");\r\n }\r\n public static void method3() {\r\n System.out.println(\"method3\");\r\n }\r\n public abstract void method4();\r\n}\r\n', NULL, NULL, 'Which statement is true?'),
(14, 'public static void main(String[] args) {\r\n List<String> courses = Arrays.asList(\"Java\", \"Oracle\", \"JSF\", \"EJB\");\r\n // Line n1\r\n System.out.println(count);\r\n}', NULL, NULL, 'Which code fragment can be inserted at Line n1 to enable the code to print 2?'),
(15, 'public class Test {\r\n public static void main(String[] args) {\r\n int x = 10;\r\n int y = 2;\r\n try {\r\n for (int z = 2; z >= 0; z--) {\r\n int ans = x / z;\r\nSystem.out.print(ans+ \" \");\r\n }\r\n } catch (Exception e1) {\r\n System.out.println(\"E1\");\r\n } catch (ArithmeticException e1) {\r\n System.out.println(\"E2\");\r\n }\r\n }\r\n}\r\n', NULL, NULL, 'What is the result?'),
(16, 'StringBuilder s1 = new StringBuilder(\"Java\");\r\n String s2 = \"Love\";\r\n s1.append(s2);\r\n s1.substring(4);\r\n int foundAt = s1.indexOf(s2);\r\nSystem.out.println(foundAt);\r\n', NULL, NULL, 'What is the result?'),
(17, 'LocalDate date1 = LocalDate.of(2016, Month.JANUARY, 1);\r\nLocalDateTime date2 = LocalDateTime.of(2017, Month.JUNE, 1, 1, 1);\r\nPeriod p = Period.between(date1, date2);\r\nSystem.out.print(p.getYears() + \":\" + p.getMonths() + \":\" + p.getDays());', NULL, NULL, 'What is the result?'),
(18, 'class MyResource1 implements Closeable {\r\n public void close() {\r\n System.out.print(\"r1 \");\r\n }\r\n}\r\nclass MyResource2 implements AutoCloseable {\r\n public void close() throws IOException {\r\n System.out.print(\"r2 \");\r\n throw new IOException();\r\n }\r\n}\r\npublic class App2 {\r\n public static void main(String[] args) {\r\n try (MyResource1 r1 = new MyResource1();\r\n MyResource2 r2 = new MyResource2();) {\r\n System.out.print(\"try \");\r\n } catch (Exception e) {\r\n System.out.print(\"catch \");\r\n for (Throwable t : e.getSuppressed()) {\r\n System.out.println(t.getClass().getName());\r\n }\r\n }\r\n }\r\n}\r\n', NULL, NULL, 'What is the result?'),
(19, 'Arrays.asList(\"Fred\", \"Jim\", \"Sheila\")\r\n .stream()\r\n .peek(System.out::println)\r\n .allMatch(s -> s.startsWith(\"F\"));\r\n', NULL, NULL, 'What is the result?'),
(20, NULL, NULL, NULL, 'Which class can access all public and protected methods and fields of its super class?'),
(21, NULL, NULL, NULL, 'Method,Field can be accessed from the same class to which they belong.'),
(22, NULL, NULL, NULL, 'How can you force garbage collection of an object?'),
(23, NULL, NULL, NULL, ' TreeMap class is used to implement which collection interface. Select the one correct answer'),
(24, NULL, NULL, NULL, 'A monitor called mon has 5 threads in its waiting pool; all these waiting threads have the same priority. One of the threads is thread1. How can you notify thread1 so that it alone moves from Waiting state to Ready State?'),
(25, 'for(int i = 1; i < 3; i++)\r\nfor(int j = 3; j >= 1; j--)\r\nassert i!=j : i; ', NULL, NULL, 'What happens when the following code is compiled and run. Select the one correct  answer.'),
(26, 'int X=3; int Y =10;\r\nSystem.out.println(y%x);', NULL, NULL, 'What is the optput of this code fragment.'),
(27, NULL, NULL, NULL, 'Which of these statements are legal. Select the three correct answers.'),
(28, NULL, NULL, NULL, 'Which code fragment correctly assign a numeric literal?'),
(29, 'Path sPath = Paths.get(\"test1.txt\");\r\nPath dPath = Paths.get(\"test2.txt\");\r\ntry {\r\n Files.move(sPath, dPath, StandardCopyOption.ATOMIC_MOVE);\r\n} catch (IOException ex) {\r\n System.err.println(\"Exception!\");\r\n}\r\n', NULL, NULL, 'Which statement is true?'),
(30, 'Stream<Integer> numStream = Stream.of(10, 20, 30);\r\nnumStream.map(n -> n + 10).peek(s -> System.out.print(s));\r\nnumStream.forEach(s -> System.out.println(s));', NULL, NULL, 'What it the result?');



INSERT INTO `answer` (answer_id, answer_type, text, question_id) VALUES
(1, 'NEGATIVE', '65432', 1),
(2, 'NEGATIVE', '123456', 1),
(3, 'NEGATIVE', '12345', 1),
(4, 'NEGATIVE', 'Nothing', 1),
(5, 'NEGATIVE', 'An exception could be thrown at runtime.', 1),
(6, 'POSITIVE', '654321', 1),
(7, 'NEGATIVE', 'class F extends A,E{ }', 2),
(8, 'POSITIVE', 'class F implements B{ }', 2),
(9, 'POSITIVE', 'class F extends E{ }', 2),
(10, 'NEGATIVE', 'class F implements B,C{ }', 2),
(11, 'NEGATIVE', 'class F implements B,D{ }', 2),
(12, 'NEGATIVE', 'An uncaught exception is thrown at runtime.', 3),
(13, 'NEGATIVE', 'No output', 3),
(14, 'NEGATIVE', 'Error', 3),
(15, 'NEGATIVE', '0', 3),
(16, 'POSITIVE', 'Compilation fails.', 3),
(17, 'NEGATIVE', 'interface F extends E{ }', 4),
(18, 'NEGATIVE', 'interface F implements D{ }', 4),
(19, 'NEGATIVE', 'interface F extends B,D{ }', 4),
(20, 'POSITIVE', 'interface F extends D{ }', 4),
(21, 'POSITIVE', 'interface F implements B,D{ }', 4),
(22, 'NEGATIVE', 'Compilation fails due to error at line 3.', 5),
(23, 'NEGATIVE', 'Length of this array is 3.', 5),
(24, 'POSITIVE', 'Will produce output as true.', 5),
(25, 'NEGATIVE', 'Will produce output as false.', 5),
(26, 'NEGATIVE', 'Compilation fails due to error at line 4.', 5),
(27, 'NEGATIVE', 'Compilation fails.', 6),
(28, 'NEGATIVE', 'false false', 6),
(29, 'NEGATIVE', 'true false', 6),
(30, 'NEGATIVE', 'false true', 6),
(31, 'NEGATIVE', 'true true', 6),
(32, 'POSITIVE', '2', 7),
(33, 'NEGATIVE', '5', 7),
(34, 'NEGATIVE', 'Compilation fails due to line 4.', 7),
(35, 'NEGATIVE', '3', 7),
(36, 'NEGATIVE', 'Compilation fails due to line 3.', 7),
(37, 'NEGATIVE', 'An exception will be thrown in runtime.', 7),
(38, 'NEGATIVE', '1stName', 8),
(39, 'POSITIVE', '_4_', 8),
(40, 'POSITIVE', '$', 8),
(41, 'POSITIVE', 'getSize', 8),
(42, 'NEGATIVE', '@name', 8),
(43, 'NEGATIVE', 'Output is unpredictable.', 9),
(44, 'NEGATIVE', 'Compilation fails.', 9),
(45, 'NEGATIVE', '10', 9),
(46, 'NEGATIVE', '18', 9),
(47, 'NEGATIVE', '8', 9),
(48, 'NEGATIVE', 'Compilation fails.', 10),
(49, 'NEGATIVE', 'A runtime exception will be thrown.', 10),
(50, 'NEGATIVE', '5', 10),
(51, 'POSITIVE', '10', 10),
(52, 'NEGATIVE', '4', 10),
(53, 'NEGATIVE', '1 John 22 1 John 22', 11),
(54, 'NEGATIVE', 'ClassCastException is thrown at runtime.', 11),
(55, 'POSITIVE', '1 John 25 1 John 25', 11),
(56, 'NEGATIVE', 'Compilation fails.', 11),
(57, 'NEGATIVE', '1 John 25 1 John 22', 11),
(58, 'NEGATIVE', ' private class Invoice {  void print() {System.out.println(\"Invoice Printed\");}  }', 12),
(59, 'NEGATIVE', 'public class Invoice {  void print() {System.out.println(\"Invoice Printed\");}  }', 12),
(60, 'POSITIVE', 'class Invoice {  void print() {System.out.println(\"Invoice Printed\");}  }', 12),
(61, 'NEGATIVE', ') protected class Invoice {  void print() {System.out.println(\"Invoice Printed\");}  }', 12),
(62, 'NEGATIVE', 'Only method4() compiles', 13),
(63, 'NEGATIVE', 'Only method2() and method4() compiles', 13),
(64, 'POSITIVE', ' Only method2(), method3(), and method4() compiles.', 13),
(65, 'NEGATIVE', 'MyInt.java compiles.', 13),
(66, 'NEGATIVE', 'int count = courses.stream().filter(s -> s.startsWith(\"J\")).count();', 14),
(67, 'POSITIVE', 'long count = courses.stream().filter(s -> s.startsWith(\"J\")).count();', 14),
(68, 'NEGATIVE', 'int count = courses.filter(s -> s.startsWith(\"J\")).stream().count();', 14),
(69, 'NEGATIVE', 'long count = courses.filter(s -> s.startsWith(\"J\")).stream().count();', 14),
(70, 'NEGATIVE', 'E1', 15),
(71, 'NEGATIVE', 'E2', 15),
(72, 'NEGATIVE', '5 10 E1', 15),
(73, 'POSITIVE', 'Compilation fails.', 15),
(74, 'NEGATIVE', '-1', 16),
(75, 'NEGATIVE', '3', 16),
(76, 'POSITIVE', '4', 16),
(77, 'NEGATIVE', 'A StringIndexOutOfBoundsException is thrown at runtime', 16),
(78, 'NEGATIVE', ' 1:5:0', 17),
(79, 'NEGATIVE', '1:6:0', 17),
(80, 'NEGATIVE', '0:0:0', 17),
(81, 'POSITIVE', 'Compilation fails.', 17),
(82, 'NEGATIVE', 'try r2 r1 catch java.io.IOException', 18),
(83, 'POSITIVE', 'try r2 r1 catch', 18),
(84, 'NEGATIVE', 'try r1 r2 catch', 18),
(85, 'NEGATIVE', 'Compilation fails.', 18),
(86, 'NEGATIVE', 'Fred Jim Sheila', 19),
(87, 'POSITIVE', 'Fred Jim', 19),
(88, 'NEGATIVE', 'Fred', 19),
(89, 'NEGATIVE', 'Compilation fails', 19),
(90, 'NEGATIVE', 'Inner class', 20),
(91, 'NEGATIVE', 'Outer class', 20),
(92, 'NEGATIVE', 'Super class', 20),
(93, 'POSITIVE', 'sub-class', 20),
(94, 'NEGATIVE', 'Public', 21),
(95, 'NEGATIVE', 'Protected', 21),
(96, 'POSITIVE', 'Private', 21),
(97, 'NEGATIVE', 'Defaukt', 21),
(98, 'POSITIVE', 'Garbage collection cannot be forced.', 22),
(99, 'NEGATIVE', 'Call System.gc().', 22),
(100, 'NEGATIVE', 'Call System.gc() passing in a reference to the object to be garbage collected.', 22),
(101, 'NEGATIVE', 'Call Runtime.gc().', 22),
(102, 'NEGATIVE', 'Set all references to the object to new values(null, for example).', 22),
(103, 'NEGATIVE', 'Set', 23),
(104, 'NEGATIVE', 'SortedSet', 23),
(105, 'NEGATIVE', 'List', 23),
(106, 'NEGATIVE', 'Tree', 23),
(107, 'POSITIVE', 'SortedMap', 23),
(108, 'NEGATIVE', 'Execute notify(thread1); from within synchronized code of mon.', 24),
(109, 'NEGATIVE', 'Execute mon.notify(thread1); from synchronized code of any object.', 24),
(110, 'NEGATIVE', 'Execute thread1.notify(); from synchronized code of any object.', 24),
(111, 'NEGATIVE', 'Execute thread1.notify(); from any code(synchronized or not) of any object.', 24),
(112, 'POSITIVE', 'You cannot specify which thread will get notified.', 24),
(113, 'NEGATIVE', 'The class compiles and runs, but does not print anything.', 25),
(114, 'POSITIVE', 'The number 1 gets printed with AssertionError', 25),
(115, 'NEGATIVE', 'The number 2 gets printed with AssertionError', 25),
(116, 'NEGATIVE', 'The number 3 gets printed with AssertionError', 25),
(117, 'NEGATIVE', 'The program generates a compilation error.', 25),
(118, 'NEGATIVE', '1', 26),
(119, 'POSITIVE', '2', 26),
(120, 'NEGATIVE', '0', 26),
(121, 'NEGATIVE', '3', 26),
(122, 'POSITIVE', 'int arr[][] = new int[5][5];', 27),
(123, 'POSITIVE', ' int[]arr[] = new int[5][5];', 27),
(124, 'POSITIVE', 'int[] arr = new int[5][];', 27),
(125, 'NEGATIVE', 'int[] arr = new int[][5];', 27),
(126, 'NEGATIVE', 'byte b1 = b1011;', 28),
(127, 'NEGATIVE', 'byte b2 = 1011b;', 28),
(128, 'POSITIVE', 'byte b3 = 0b1001;', 28),
(129, 'NEGATIVE', ' byte b4 = 0xb001;', 28),
(130, 'POSITIVE', ' The test1.txt file is renamed to the test2.txt file and the test1.txt file is removed in a single operation.', 29),
(131, 'NEGATIVE', 'The test1.txt file is renamed to the test2.txt file and the test1.txt file is removed in two distinct operation.', 29),
(132, 'NEGATIVE', 'The test1.txt file is copied and renamed to the test2.txt file in a single operation.', 29),
(133, 'NEGATIVE', 'The program prints: Exception!', 29),
(134, 'NEGATIVE', '203040 102030', 30),
(135, 'NEGATIVE', '102030 203040', 30),
(136, 'NEGATIVE', '102030 102030', 30),
(137, 'POSITIVE', 'An exception is thrown at runtime', 30);